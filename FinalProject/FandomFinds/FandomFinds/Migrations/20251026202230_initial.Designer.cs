// <auto-generated />
using System;
using FandomFinds.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FandomFinds.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20251026202230_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FandomFinds.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nintendo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "S.H Figuarts"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Funko"
                        });
                });

            modelBuilder.Entity("FandomFinds.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FandomFinds.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Nintendo",
                            Description = "Booster pack with 10 cards and a code card for online game. Each pack is random.",
                            ImagePath = "/images/destined-rival.jpg",
                            Name = "Destined Rival TCG Pokemon",
                            Price = 5.99m
                        },
                        new
                        {
                            Id = 2,
                            Brand = "sh figuarts",
                            Description = "High end action figure. Highly articulated.",
                            ImagePath = "/images/spiderman.jpg",
                            Name = "S.H Figuarts Spider-Man",
                            Price = 65.99m
                        },
                        new
                        {
                            Id = 3,
                            Brand = "sh figuarts",
                            Description = "High end action figure. Highly articulated.",
                            ImagePath = "/images/broly.jpg",
                            Name = "S.H Figuarts Broly",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Funko",
                            Description = "Vinyl Collectable figure 6 inches in height",
                            ImagePath = "/images/metal-sonic-funko.jpg",
                            Name = "Metal Sonic Funko Pop",
                            Price = 12.99m
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Tomy",
                            Description = "Collectable. Rare find",
                            ImagePath = "/images/blaziken.jpg",
                            Name = "Pokemon figure- Mega Blaziken",
                            Price = 109.99m
                        },
                        new
                        {
                            Id = 6,
                            Brand = "jakks",
                            Description = "5in Mario figure in cat suit. Includes a question box. Exclusive movie merch",
                            ImagePath = "/images/cat-mario.jpg",
                            Name = "Cat Mario",
                            Price = 14.99m
                        },
                        new
                        {
                            Id = 7,
                            Brand = "sh figuarts",
                            Description = "High end action figure. Highly articulated. 2 pack. Reenact scenes from the manga with the high poseable figures",
                            ImagePath = "/images/chainsawman.jpg",
                            Name = "S.h. Figuarts Denji chainsaw man figure. Double pack",
                            Price = 149.99m
                        },
                        new
                        {
                            Id = 8,
                            Brand = "sh figuarts",
                            Description = "High end action figure. Highly articulated. Includes lightsabers.",
                            ImagePath = "/images/grevious.jpg",
                            Name = "StarWars General Grevious figure",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 9,
                            Brand = "sh figuarts",
                            Description = "High end action figure. Highly articulated. Includes sword and cape. 12in figure.",
                            ImagePath = "/images/king-cold.jpg",
                            Name = "King Cold-Dragonball figure",
                            Price = 109.99m
                        },
                        new
                        {
                            Id = 10,
                            Brand = "jakks",
                            Description = "4 characters all included in this special pack. Articulated. Detailed designs. Inspired by the movie! Perfect set for collectors",
                            ImagePath = "/images/mario-set.jpg",
                            Name = "Mario Set 4 pack",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 11,
                            Brand = "sh figuarts",
                            Description = "Very rare mario figure. Brand new. Sealed.",
                            ImagePath = "/images/mario-sh.jpg",
                            Name = "Mario S.H. Figuarts",
                            Price = 149.99m
                        },
                        new
                        {
                            Id = 12,
                            Brand = "jakks",
                            Description = "Hard to find. Articulated. Very detailed ",
                            ImagePath = "/images/metal-sonic.jpg",
                            Name = "Metal Sonic figure",
                            Price = 69.99m
                        },
                        new
                        {
                            Id = 13,
                            Brand = "sh figuarts",
                            Description = "High end action figure. Highly articulated. Includes many accessories. Realistic.",
                            ImagePath = "/images/miles.jpg",
                            Name = "S.H Figuarts Miles Morales figure",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 14,
                            Brand = "jakks",
                            Description = "Hard to find. Articulated. Very detailed ",
                            ImagePath = "/images/metal-sonic.jpg",
                            Name = "Metal Sonic figure",
                            Price = 69.99m
                        },
                        new
                        {
                            Id = 15,
                            Brand = "Entertainment E",
                            Description = "Reenact classic scenes from highly popular show Stranger Things. Includes Demigorgan, Dustin and Will. ",
                            ImagePath = "/images/stranger-set.jpg",
                            Name = "Stranger Things Character set",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 16,
                            Brand = "S.H Figuarts",
                            Description = "Hard to find. Articulated. Very detailed ",
                            ImagePath = "/images/scarlet-spider.jpg",
                            Name = "Scarlet Spiderman",
                            Price = 99.99m
                        },
                        new
                        {
                            Id = 17,
                            Brand = "Entertainment E",
                            Description = "Hard to find. From season one of Strangers Things. Eleven in dress with shaved head.",
                            ImagePath = "/images/stranger-11.jpg",
                            Name = "Eleven Stranger Things figure",
                            Price = 59.99m
                        },
                        new
                        {
                            Id = 18,
                            Brand = "S.H Figuarts",
                            Description = "Articulated. Very detailed. Accessories included. Collect them all!",
                            ImagePath = "/images/power.jpg",
                            Name = "Chainsaw Man Power Figure",
                            Price = 79.99m
                        },
                        new
                        {
                            Id = 19,
                            Brand = "Hasbro",
                            Description = "Collectable. In original packaging. Perfect condition. Perfect for the collector in you life.",
                            ImagePath = "/images/optimus-prime.jpg",
                            Name = "Transformers Optimus Prime figure",
                            Price = 29.99m
                        });
                });

            modelBuilder.Entity("FandomFinds.Models.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductReviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Rating = 5,
                            ReviewText = "Great pack, got a super rare card too! It's my form of gambling. Lol.",
                            ReviewerName = "Thomas"
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            Rating = 4,
                            ReviewText = "Amazing figure quality! It articulates so well.",
                            ReviewerName = "Peter"
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 4,
                            Rating = 5,
                            ReviewText = "Cute Funko Pop. I have a huge collection and I'm so excited to add this to the collection!",
                            ReviewerName = "Amy"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");
                });

            modelBuilder.Entity("FandomFinds.Models.Order", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
