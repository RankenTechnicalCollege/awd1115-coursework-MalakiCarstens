@using FandomFinds
@model PaginatedList<FandomFinds.Models.Product>




@{
    ViewData["Title"] = "Shopping";
    var searchString = ViewData["CurrentFilter"] as string ?? "";
}

<h2>Shopping</h2>

<form asp-controller="Orders" asp-action="Shopping" method="get" class="mb-3 d-flex">
    <input type="text" name="searchString" value="@searchString" class="form-control me-2" placeholder="Search Listings" />
    <button type="submit" class="btn btn-primary">Search</button>
</form>

@if (!Model.Any())
{
    <p>No products found.</p>
}
else
{
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="card col-md-3 m-2" style="width: 18rem;">
                <img src="@product.ImagePath" class="card-img-top" alt="@product.Name" />
                <div class="card-body">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text">@product.Description</p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">$@product.Price</li>
                </ul>
                <div class="card-body">
                 
                </div>
            </div>
        }
    </div>

    <div class="d-flex justify-content-center mt-3">
        <a asp-action="Shopping" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-searchString="@searchString" class="btn btn-secondary me-2 @(Model.HasPreviousPage ? "" : "disabled")">Previous</a>
        <span class="btn btn-light" style="cursor: default">Page @Model.PageIndex of @Model.TotalPages</span>
        <a asp-action="Shopping" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-searchString="@searchString" class="btn btn-secondary ms-2 @(Model.HasNextPage ? "" : "disabled")">Next</a>
    </div>
}
